generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RefStatus {
  FollowUp
  Closed
  Pending
}

model User {
  id            String        @id @db.Uuid
  userName      String?
  email         String?       @unique
  phoneNo       BigInt?       @unique
  resumeUrl     String?
  messages      ReferralMsg[]
  jobsAdded     JobPool[]
  createdAt     DateTime      @default(now())
}

model ReferralMsg {
  id            Int           @id @default(autoincrement())
  message       String
  subject       String?
  userId        String         @db.Uuid
  employeeId    Int
  jobId         Int?
  date          DateTime       @default(now())
  status        RefStatus      @default(Pending)
  User          User           @relation(fields: [userId], references: [id])
  Employee      EmpInfo        @relation(fields: [employeeId], references: [id])
  Job           JobPool?       @relation(fields: [jobId], references: [id])
  followUps     FollowUpMsg[]
  replyReceived Boolean        @default(false)
}

model FollowUpMsg {
  id            Int           @id @default(autoincrement())
  message       String
  referralId    Int
  version       Int           @default(1)
  sentAt        DateTime      @default(now())
  ReferralMsg   ReferralMsg   @relation(fields: [referralId], references: [id])
}

model EmpInfo {
  id            Int           @id @default(autoincrement())
  name          String
  email         String?
  phoneNo       BigInt?
  linkedInUrl   String?
  companyName   String
  referrals     ReferralMsg[]
  createdAt     DateTime      @default(now())
}

model JobPool {
  id            Int           @id @default(autoincrement())
  niche         String
  title         String?
  jobUrl        String?
  jobId         String?
  companyName   String?
  addedById     String?        @db.Uuid
  addedBy       User?          @relation(fields: [addedById], references: [id])
  referrals     ReferralMsg[]
  createdAt     DateTime       @default(now())
}
